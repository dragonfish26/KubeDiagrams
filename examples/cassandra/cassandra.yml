#Cassandra Service 
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cassandra
  name: cassandra
spec:                 #Spec defines the behavior of a service.
  clusterIP: None     #headless service
  ports:              #The list of ports that are exposed by this service.
  - port: 9042
  selector:
    app: cassandra    #Targets pods with this label
---
#Cassandra StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra     
  labels:
    app: cassandra
spec:                             #Spec defines the desired identities of pods in this set.
  serviceName: cassandra          #name of the service that governs this StatefulSet - responsible for the network identity of the set
  replicas: 3                     #number of Pods created by the StatefulSet controller
  selector:                       #must match the pod template's labels
    matchLabels:
      app: cassandra
  template:                       #the object that describes the pod that will be created
    metadata:
      labels:
        app: cassandra
    spec:
      terminationGracePeriodSeconds: 500
      containers:                 #List of containers belonging to the pod. 
      - name: cassandra
        image: gcr.io/google-samples/cassandra:v13
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: "500m"
            memory: 1Gi
          requests:
            cpu: "500m"
            memory: 512M #CHANGED: instead of 1Gi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:                        #Actions that the management system should take in response to container lifecycle events.
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - nodetool drain
        env:                              #List of environment variables to set in the container.
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "cassandra-0.cassandra.default.svc.cluster.local"
          - name: CASSANDRA_CLUSTER_NAME
            value: "K8Demo"
          - name: CASSANDRA_DC
            value: "DC1-K8Demo"
          - name: CASSANDRA_RACK
            value: "Rack1-K8Demo"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - echo OK #ERROR: if /ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /cassandra_data
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:                       #list of claims that pods are allowed to reference
  - metadata:
      name: cassandra-data
      #CHANGE : add labels
      labels:
        app: cassandra
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: fast
      resources:
        requests:
          storage: 512M #CHANGED: instead of 1Gi
---
# Fast StorageClass
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: fast
  #CHANGE : add labels
  labels:
    app: cassandra
provisioner: k8s.io/minikube-hostpath
parameters:
  type: pd-ssd
